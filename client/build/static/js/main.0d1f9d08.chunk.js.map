{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","actions/profile.js","img/spinner.gif","components/layout/Spinner.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfilesItems.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentItem.js","components/post/CommentForm.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/routing/PrivateRoute.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_GITHUB_REPOS","CLEAR_PROFILE","UPDATE_PROFILE","ADD_EDUCATION","ADD_EXPERIENCE","PROFILE_ERROR","ACCOUNT_DELETED","GET_POSTS","GET_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","DELETE_POST","UPDATE_LIKE","POSTS_ERROR","CLEAR_POST","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","getItem","get","res","data","connect","state","auth","logout","isAuthenticated","isLoading","guestLinks","to","authLinks","className","onClick","href","login","email","passWord","config","body","JSON","stringify","post","console","log","errors","response","error","forEach","errs","useState","formData","setFormData","onChangeHandler","eve","name","target","value","onSubmit","preventDefault","placeholder","onChange","minLength","register","err","password2","required","alerts","alert","length","map","getCurrentProfile","statusText","status","createCurrentProfile","history","edit","Headers","push","Spinner","src","spinnerImage","style","margin","width","display","alt","deleteExperience","delete","experiences","experience","expe","company","title","format","from","current","_id","deleteEducation","educations","education","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","charAt","toUpperCase","slice","withRouter","website","location","skill","bio","githubUsername","facebook","twitter","instagram","linkedin","youtube","displaySocialMedia","toggleSocialMedia","split","addExperience","put","description","disableToDate","toggleDisableToDate","disabled","cols","rows","addEducation","fieldofstudy","ProfilesItems","avatar","skl","index","getAllProfiles","profiles","ProfileTop","social","rel","ProfileAbout","trim","ProfileExperience","ProfileEducation","getProfilesByUserId","user_id","match","params","class","exp","PostItem","displaySection","text","like","comment","date","addLike","addUnlike","deletePost","defaultProps","post_id","addPost","setText","onSubmitHandler","getAllPosts","posts","removeComment","comment_id","addComment","getPostByPostId","comm","initialState","action","filter","eachAlert","setItem","removeItem","repos","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Component","component","rest","render","props","App","exact","path","Landing","Login","Register","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d1f9d08.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const GET_PROFILES = 'GET_PROFILES'\r\nexport const GET_GITHUB_REPOS = 'GET_GITHUB_REPOS'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const CREATE_PROFILE = 'CREATE_PROFILE'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const ADD_EDUCATION = 'ADD_EDUCATION'\r\nexport const ADD_EXPERIENCE = 'ADD_EXPERIENCE'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const GET_POST = 'GET_POST'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'\r\nexport const DELETE_POST = 'GET_POST'\r\nexport const UPDATE_LIKE = 'UPDATE_LIKE'\r\nexport const POSTS_ERROR = 'POSTS_ERROR'\r\nexport const CLEAR_POST = 'CLEAR_POST'","import { SET_ALERT,REMOVE_ALERT } from \"./types\";\r\nimport {v4 as uuid} from 'uuid'\r\n\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000)=> dispatch => {\r\n\r\n    const id = uuid()\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload:{\r\n            msg,\r\n            alertType,\r\n            id\r\n        }\r\n    })\r\n\r\n    setTimeout(() => \r\n        dispatch({\r\n            type: REMOVE_ALERT,\r\n            payload:id\r\n        })\r\n    , timeout);\r\n}","import axios from \"axios\";\r\n\r\nconst setAuthToken = token =>{\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token\r\n    }\r\n    else{\r\n        delete axios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n  \r\nexport default setAuthToken \r\n","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, CLEAR_PROFILE, CLEAR_POST } from \"./types\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//USER LOAD ACTION\r\nexport const loadUser = ()=> async dispatch =>{\r\n    const token = localStorage.getItem('token')\r\n    if(token){\r\n        setAuthToken(token)\r\n    }\r\n\r\n    try{\r\n        const res = await axios.get('/api/auths/')\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n//REGISTER USER ACTION\r\nexport const register = ({name, email, passWord})=> async (dispatch)=>{\r\n    const config = {headers:{\r\n        'Content-Type': 'application/json'\r\n    }} \r\n    \r\n    const body = JSON.stringify({name, email, passWord})\r\n\r\n    try{\r\n        const res = await axios.post('/api/users', body, config)\r\n        console.log(res)\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(loadUser())\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        const errors= err.response.data.errors\r\n        if(errors){\r\n            errors.forEach(err => dispatch(setAlert(err.msg, 'danger'))\r\n            );\r\n        }\r\n        \r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//LOGIN USER ACTION\r\nexport const login = ({ email, passWord})=> async (dispatch)=>{\r\n    const config = {headers:{\r\n        'Content-Type': 'application/json'\r\n    }} \r\n    \r\n    const body = JSON.stringify({ email, passWord})\r\n\r\n    try{\r\n        const res = await axios.post('/api/auths', body, config)\r\n        //console.log(res)\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(loadUser())\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        const errors= err.response.data.error\r\n        if(errors){\r\n            errors.forEach(errs => dispatch(setAlert(errs.msg, 'danger'))\r\n            );\r\n        }\r\n        \r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//LOGOUT ACTION\r\nexport const logout = ()=> dispatch =>{\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n    dispatch({\r\n        type: CLEAR_POST\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {logout} from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Navbar = ({logout, auth: {isAuthenticated, isLoading}}) => {\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li><Link to=\"/profiles\"> Developers</Link></li>\r\n      <li><Link to=\"/register\">Register</Link></li>\r\n      <li><Link to=\"/login\">Login</Link></li>\r\n    </ul>\r\n  )\r\n\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n          <Link to=\"/profiles\"> Developers</Link>\r\n      </li>\r\n      <li>\r\n          <Link to=\"/posts\"> Posts</Link>\r\n      </li>\r\n      <li><Link to=\"/dashboard\">\r\n          <i className = 'fas fa-user'></i>{' '}\r\n          <span className ='hide-sm'>Dashboard</span>\r\n          </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick= {logout} href=\"#!\">\r\n           <i className = 'fas fa-sign-out-alt'></i>{' '}<span className ='hide-sm'>Logout</span> </a>\r\n      </li>\r\n   </ul>\r\n  )\r\n    return (\r\n     <>\r\n     <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to =\"/\"><i className=\"fas fa-code\"></i> Social Media\r\n        </Link>\r\n      </h1>\r\n      {!isLoading && (<>\r\n        {isAuthenticated ? authLinks : guestLinks}</>)}\r\n    </nav>\r\n     </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  auth:PropTypes.object.isRequired,\r\n  logout:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops, {logout})(Navbar)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Landing = ({isAuthenticated}) => {\r\n  if(isAuthenticated){\r\n    return(<Redirect to = '/dashboard'/>)\r\n  }\r\n    return (\r\n       <>\r\n        <section className=\"landing\">\r\n        <div className=\"dark-overlay\">\r\n         <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Developer Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n       </>\r\n    )\r\n}\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToprops)(Landing)\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect} from 'react-router-dom'\r\nimport { login } from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Login = ({login, isAuthenticated})=> {\r\n    \r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        passWord:''\r\n    })\r\n\r\n    const {email,passWord} = formData\r\n\r\n    const onChangeHandler = (eve)=>{\r\n        const name = eve.target.name\r\n        const value = eve.target.value\r\n        setFormData({...formData, [name]:value })   \r\n    }\r\n\r\n    const submitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        login({email, passWord}) \r\n    }\r\n// REDIRECT IF LOGGED_IN\r\n    if(isAuthenticated){\r\n      return <Redirect to = '/dashboard'/>\r\n    }\r\n\r\n    return (\r\n    <>\r\n      <h1 className=\"large text-primary\">Sign In </h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign In Your Account</p>\r\n      <form className=\"form\" onSubmit = {submitHandler}>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value = {email} onChange = {onChangeHandler} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"passWord\"\r\n            minLength=\"8\"\r\n            value = {passWord}\r\n            onChange = {onChangeHandler}\r\n          />\r\n        </div>\r\n       \r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Not have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n </>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToprops = (state)=> ({isAuthenticated: state.auth.isAuthenticated})\r\n\r\nexport default connect(mapStateToprops,{login})(Login)\r\n\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport {setAlert} from '../../actions/alert'\r\nimport { register } from '../../actions/auth'\r\n\r\nconst Register = ({setAlert, register, isAuthenticated})=> {\r\n    \r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        passWord:'',\r\n        password2:'',\r\n    })\r\n\r\n    const {name,email,passWord,password2} = formData\r\n\r\n    const onChangeHandler = (eve)=>{\r\n        const name = eve.target.name\r\n        const value = eve.target.value\r\n        setFormData({...formData, [name]:value })   \r\n    }\r\n\r\n    const submitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        if(passWord !== password2){\r\n            setAlert('passWord do not match','danger')\r\n        }\r\n        else{\r\n            register({name, email, passWord})\r\n        }\r\n    }\r\n\r\n    if(isAuthenticated){\r\n      return <Redirect to = '/dashboard'/>\r\n    }\r\n\r\n    return (\r\n    <>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form className=\"form\" onSubmit = {submitHandler}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" value = {name} onChange = {onChangeHandler} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value = {email} onChange = {onChangeHandler} required />\r\n          <small className=\"form-text\"\r\n            >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"passWord\"\r\n            minLength=\"8\"\r\n            value = {passWord}\r\n            onChange = {onChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            minLength=\"8\"\r\n            value = {password2}\r\n            onChange = {onChangeHandler}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n </>\r\n    )\r\n}\r\n\r\nconst mapStateToprops = (state)=> ({isAuthenticated: state.auth.isAuthenticated})\r\n\r\nexport default connect(mapStateToprops,{setAlert,register})(Register)\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Alert = ({alerts}) => \r\nalerts !== null && alerts.length > 0 && alerts.map((alert)=>\r\n    <div key = {alert.id} className = {`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n)\r\n\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>(\r\n    {\r\n        alerts: state.alert\r\n    })\r\n\r\n\r\nexport default connect(mapStateToprops)(Alert)\r\n","import axios  from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport { ACCOUNT_DELETED, ADD_EDUCATION, ADD_EXPERIENCE, CLEAR_PROFILE, GET_PROFILE,\r\n        GET_GITHUB_REPOS, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\";\r\n\r\n//GET CURRENT USER  PROFILE\r\nexport const getCurrentProfile = ()=> async (dispatch)=>{\r\n    try{\r\n        const res = await axios.get('api/profiles/me')\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data \r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//GET ALL USERS PROFILE\r\nexport const getAllProfiles = ()=> async dispatch=>{\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    try{\r\n        const res = await axios.get('/api/profiles/')\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//GET  USER  PROFILE BY GIVEN USER_ID\r\nexport const getProfilesByUserId = (user_id)=> async dispatch=>{\r\n    try{\r\n        const res = await axios.get(`/api/profiles/user/${user_id}`)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//GET  GITHUB REPOS BY GIVEN USER_NAME\r\nexport const getGithubRepos = (user_name)=> async dispatch=>{\r\n    try{\r\n        const res = await axios.get(`/api/profiles/github/${user_name}`)\r\n        dispatch({\r\n            type: GET_GITHUB_REPOS,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//CREATE AND UPDATE CURRENT USER PROFILE\r\nexport const createCurrentProfile = (formData, history, edit = false)=> async(dispatch)=>{\r\n\r\n    const config = {Headers:{\r\n        'Content-Type': 'application/json'\r\n    }}\r\n    //console.log('form sending data',formData)\r\n    //const body = JSON.stringify(formData)\r\n    try{\r\n        const res = await axios.post('/api/profiles', formData, config)\r\n        //console.log('response of profilecreate',res.data)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert(edit ? 'Profile Updated': 'Profile Created', 'success'))\r\n        if(!edit){\r\n            history.push('/dashboard')\r\n        }\r\n    }\r\n    catch(err){\r\n        const error = err.response.data.errors\r\n        error.map((errs)=> dispatch(setAlert(errs.msg, 'danger')))\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//ADD NEW EXPERIENCE TO THE PROFILE OF CURRENT USER AND UPDATE PROFILE\r\n\r\nexport const addExperience = (formData, history)=> async dispatch=>{\r\n        const config = {Headers:{\r\n            'Content_type': 'application/json'\r\n        }}\r\n        try{\r\n            const res = await axios.put('/api/profiles/experience', formData, config)\r\n            dispatch({\r\n                type: ADD_EXPERIENCE,\r\n                payload: res.data\r\n            })\r\n            \r\n            dispatch(setAlert('Experience added successfully','success'))\r\n            history.push('/dashboard')\r\n        }\r\n        catch(err){\r\n            const error = err.response.data.errors\r\n            error.map((errs)=> dispatch(setAlert(errs.msg, 'danger')))\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n\r\n    export const addEducation = (formData, history)=> async dispatch=>{\r\n        const config = {Headers:{\r\n            'Content_type': 'application/json'\r\n        }}\r\n        try{\r\n            //console.log(`BEFORE ADD EDUCATION API SERVER REQ is SEND `)\r\n            const res = await axios.put('/api/profiles/education', formData, config)\r\n            //console.log('res from server is', res.data)\r\n            dispatch({\r\n                type: ADD_EDUCATION,\r\n                payload: res.data\r\n            })\r\n            //console.log(`after ADD EDUCATION Action is dispatched  payload is ${res.data} `)\r\n            dispatch(setAlert('Education added successfully','success'))\r\n            history.push('/dashboard')\r\n        }\r\n        catch(err){\r\n            const error = err.response.data.errors\r\n            error.map((errs)=> dispatch(setAlert(errs.msg, 'danger')))\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n\r\n// DELETE PROFILE EXPERIENCE WITH GIVEN EXPERIENCE_ID \r\n\r\nexport const deleteExperience = (id)=> async dispatch=>{\r\n    try{\r\n        const res = await axios.delete(`/api/profiles/experience/${id}`)\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Experience Deleted Successfully'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//DELETE PROFILE EDUCATION WITH GIVEN EDUCATION_ID\r\nexport const deleteEducation = (id)=> async dispatch=>{\r\n    try{\r\n        const res = await axios.delete(`/api/profiles/education/${id}`)\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Education Deleted Successfully'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//DELETE ACCOUNT PERMANENTLY\r\nexport const deleteAccount = ()=> async dispatch=>{\r\n    if(window.confirm('Your Account will Permanently DELETED YOU WILL LOOSE ALL YOUR DATA ')){\r\n        try{\r\n            await axios.delete('/api/profiles/')\r\n            dispatch({type: CLEAR_PROFILE})\r\n            dispatch({type: ACCOUNT_DELETED})\r\n            dispatch(setAlert('ACCOUNT HAS BEEN PERMANENTLY DELETED','danger'))\r\n        }catch(err){\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/spinner.a65ed0a2.gif\";","import React from 'react'\r\nimport spinnerImage from '../../img/spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n          <img src = {spinnerImage}\r\n          style = {{margin : 'auto', width : '200px', display : 'block'}}\r\n          alt = 'Loading'\r\n          />  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { deleteExperience } from '../../actions/profile'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Experience = ({experiences, deleteExperience}) => {\r\n\r\n    const experience = experiences.map((expe)=>(\r\n        <tr key= {expe._id}>\r\n            <td> {expe.company } </td>\r\n            <td className='hide-sm'> {expe.title} </td>\r\n            <td>\r\n                <Moment format = 'YYYY/MM/MM'>{expe.from}</Moment>{' - '}\r\n                {expe.current ? 'Now': (<Moment format = 'YYYY/MM/DD'>{expe.to}</Moment>)}\r\n            </td>\r\n            <td>\r\n                <button className = 'btn btn-danger' onClick = { () => deleteExperience(expe._id) } > \r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <>\r\n          <h2 className = 'my-2'>Experience Credentials</h2>\r\n          <table className= 'table'>\r\n              <thead>\r\n                  <tr>\r\n                      <th>Company</th>\r\n                      <th className = 'hide-sm'>Title</th>\r\n                      <th className = 'hide-sm'>Year</th>\r\n                      <th></th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>{experience}</tbody>\r\n          </table>  \r\n        </>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experiences: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteExperience})(Experience)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { deleteEducation } from '../../actions/profile'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Education = ({educations, deleteEducation}) => {\r\n\r\n    const education = educations.map((edu)=>(\r\n        <tr key= {edu._id}>\r\n            <td> {edu.school } </td>\r\n            <td className='hide-sm'> {edu.degree} </td>\r\n            <td>\r\n                <Moment format = 'YYYY/MM/MM'>{edu.from}</Moment>{' - '}\r\n                {edu.current ? 'Now': (<Moment format = 'YYYY/MM/DD'>{edu.to}</Moment>)}\r\n            </td>\r\n            <td>\r\n                <button className = 'btn btn-danger' onClick = { () => deleteEducation(edu._id) }>Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <>\r\n          <h2 className = 'my-2'>Education Credentials</h2>\r\n          <table className= 'table'>\r\n              <thead>\r\n                  <tr>\r\n                      <th>School</th>\r\n                      <th className = 'hide-sm'>Degree</th>\r\n                      <th className = 'hide-sm'>Year</th>\r\n                      <th></th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>{education}</tbody>\r\n          </table>  \r\n        </>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    educations: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteEducation})(Education)\r\n\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport Experience from './Experience'\r\nimport { Link } from 'react-router-dom'\r\nimport Education from './Education'\r\n\r\n\r\nconst Dashboard = ({profile: {isLoading, profile}, auth: {user}, getCurrentProfile, deleteAccount}) => {\r\n\r\n    useEffect(getCurrentProfile,[isLoading, getCurrentProfile])\r\n    return (\r\n        isLoading && profile === null ? <Spinner/> :(\r\n        <>\r\n          <h1 className = 'large text-primary'>Dashboard</h1>\r\n          <p className = 'lead'><i className= 'fa fa-user'>{' '}Welcome{' '} \r\n          {user && user.name.charAt(0).toUpperCase() + user.name.slice(1)}</i>\r\n          </p>\r\n          { profile ===null ?\r\n           <>\r\n           <p>You have not Create profile yet, Please Add Something</p>\r\n           <Link to = '/create-profile' className = 'btn btn-primary my-1'>\r\n               Create Profile\r\n           </Link>\r\n           </> \r\n           :\r\n           <>\r\n        <div className=\"dash-buttons\">\r\n        <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n          <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\r\n        \r\n        <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n           <i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\r\n        \r\n        <Link to=\"/add-education\" className=\"btn btn-light\">\r\n           <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\r\n        \r\n        </div>\r\n        <Experience experiences= {profile.experience} />\r\n        <Education educations= {profile.education} />\r\n        <div className = 'my-2'>\r\n            <button className = 'btn btn-danger' onClick = {()=> deleteAccount()}>\r\n                <i className= 'fas fa-user-minus'>{' '} Delete My Account</i>\r\n            </button>\r\n        </div>\r\n           </>}\r\n        </>\r\n        )\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=> ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops,{getCurrentProfile, deleteAccount})(Dashboard)\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { createCurrentProfile } from '../../actions/profile'\r\n\r\nconst CreateProfile = ({createCurrentProfile, history}) => {\r\n    \r\n    const [formData, setFormData] = useState({\r\n        company:'',\r\n        website:'',\r\n        location:'',\r\n        status:'',\r\n        skill:'',\r\n        bio:'',\r\n        githubUsername:'',\r\n        facebook:'',\r\n        twitter:'',\r\n        instagram:'',\r\n        linkedin:'',\r\n        youtube:''\r\n       })\r\n       const { company,\r\n        website,\r\n        location,\r\n        status,\r\n        skill,\r\n        bio,\r\n        githubUsername,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin,\r\n        youtube} = formData\r\n   \r\n    const [displaySocialMedia, toggleSocialMedia]= useState(false)\r\n\r\n    const onChangeHandler = (eve)=>{\r\n        setFormData({...formData, [eve.target.name]: eve.target.value})\r\n    }\r\n\r\n    const onSubmitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        createCurrentProfile(formData, history)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"large text-primary\">\r\n          Create Your Profile\r\n        </h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n          profile stand out\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form className=\"form\" onSubmit = {onSubmitHandler}>\r\n        <div className=\"form-group\"  >\r\n          <select name=\"status\" value = {status} onChange = {onChangeHandler}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value = {company} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value = {website} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value = {location} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skill\" value = {skill} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubUsername\"\r\n            value = {githubUsername}\r\n            onChange = {onChangeHandler}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value = {bio} onChange = {onChangeHandler}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button type=\"button\" className=\"btn btn-light\" onClick = {()=> toggleSocialMedia(!displaySocialMedia)}>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        \r\n        {displaySocialMedia ? <>\r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value = {twitter} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value = {facebook} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value = {youtube} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value = {linkedin} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value = {instagram} onChange = {onChangeHandler}/>\r\n        </div>\r\n        </>: null}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to =\"/dashboard\">Go Back</Link>\r\n      </form>  \r\n        </>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createCurrentProfile: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { createCurrentProfile })(withRouter(CreateProfile))\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { createCurrentProfile, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst EditProfile = ({createCurrentProfile, getCurrentProfile, history, profile:{profile, isLoading}}) => {\r\n    \r\n    const [formData, setFormData] = useState({\r\n        company:'',\r\n        website:'',\r\n        location:'',\r\n        status:'',\r\n        skill:'',\r\n        bio:'',\r\n        githubUsername:'',\r\n        facebook:'',\r\n        twitter:'',\r\n        instagram:'',\r\n        linkedin:'',\r\n        youtube:''\r\n       })\r\n    const { company,\r\n        website,\r\n        location,\r\n        status,\r\n        skill,\r\n        bio,\r\n        githubUsername,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin,\r\n        youtube} = formData\r\n    \r\n    const [displaySocialMedia, toggleSocialMedia]= useState(false)\r\n    useEffect(()=>{\r\n        getCurrentProfile()\r\n        setFormData({\r\n        company: isLoading || !profile.company ? '' : profile.company,\r\n        website: isLoading || !profile.website ? '' : profile.website,\r\n        location: isLoading || !profile.location ? '' : profile.location,\r\n        status: isLoading || !profile.status ? '' : profile.status,\r\n        skill: isLoading || !profile.skill ? '' : ( profile.skill + '').split(','),\r\n        bio: isLoading || !profile.bio ? '' : profile.bio,\r\n        githubUsername: isLoading || !profile.githubUsername ? '' : profile.githubUsername,\r\n        facebook: isLoading || !profile.facebook ? '' : profile.facebook,\r\n        twitter: isLoading || !profile.twitter ? '' : profile.twitter,\r\n        instagram: isLoading || !profile.instagram ? '' : profile.instagram,\r\n        linkedin: isLoading || !profile.linkedin ? '' : profile.linkedin,\r\n        youtube: isLoading || !profile.youtube ? '' : profile.youtube,\r\n        })\r\n    },[isLoading, getCurrentProfile])// eslint-disable-line\r\n\r\n    const onChangeHandler = (eve)=>{\r\n        setFormData({...formData, [eve.target.name]: eve.target.value})\r\n    }\r\n\r\n    const onSubmitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        createCurrentProfile(formData, history,true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"large text-primary\">\r\n          Create Your Profile\r\n        </h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n          profile stand out\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form className=\"form\" onSubmit = {onSubmitHandler}>\r\n        <div className=\"form-group\"  >\r\n          <select name=\"status\" value = {status} onChange = {onChangeHandler}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value = {company} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value = {website} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value = {location} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skill\" value = {skill} onChange = {onChangeHandler}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value = {githubUsername}\r\n            onChange = {onChangeHandler}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value = {bio} onChange = {onChangeHandler}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button type=\"button\" className=\"btn btn-light\" onClick = {()=> toggleSocialMedia(!displaySocialMedia)}>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        \r\n        {displaySocialMedia ? <>\r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value = {twitter} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value = {facebook} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value = {youtube} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value = {linkedin} onChange = {onChangeHandler}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value = {instagram} onChange = {onChangeHandler}/>\r\n        </div>\r\n        </>: null}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to =\"/dashboard\">Go Back</Link>\r\n      </form>  \r\n        </>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createCurrentProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToprops, { createCurrentProfile, getCurrentProfile})(withRouter(EditProfile))\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../actions/profile'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        company: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        description: '',\r\n        current: '',\r\n    })\r\n    const {\r\n        title,\r\n        company,\r\n        location,\r\n        from,\r\n        to,\r\n        description,\r\n        current\r\n    } = formData\r\n    const [disableToDate, toggleDisableToDate] = useState(false)\r\n    const onChangeHandler = (eve)=> setFormData({...formData, [eve.target.name]: eve.target.value })\r\n\r\n    const onSubmitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        addExperience(formData, history)\r\n    }\r\n\r\n    return (\r\n        <>\r\n      <h1 className=\"large text-primary\">\r\n       Add An Experience\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit = {onSubmitHandler}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value = {title} onChange = {onChangeHandler} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\"value = {company}  onChange = {onChangeHandler} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value = {location} onChange = {onChangeHandler} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value = {from} onChange = {onChangeHandler} required />\r\n        </div>\r\n         <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" value = {current}\r\n           onChange = {(eve)=> {\r\n           setFormData({...formData, current: !current})\r\n           toggleDisableToDate(!disableToDate)\r\n           } }/>\r\n          {' '} Current Job</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\"  value = {to} onChange = {onChangeHandler}\r\n          disabled = {disableToDate ? 'disable': ''}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value = {description} onChange = {onChangeHandler}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n   addExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{addExperience})(withRouter(AddExperience))\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        description: '',\r\n        current: '',\r\n    })\r\n\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        from,\r\n        to,\r\n        description,\r\n        current\r\n    } = formData\r\n\r\n    const [disableToDate, toggleDisableToDate] = useState(false)\r\n    const onChangeHandler = (eve)=> setFormData({...formData, [eve.target.name]: eve.target.value })\r\n\r\n    const onSubmitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        addEducation(formData, history)\r\n    }\r\n\r\n    return (\r\n        <>\r\n      <h1 className=\"large text-primary\">\r\n        Add Your Education\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-graduation-cap\"></i> Add any school, bootcamp, etc that\r\n        you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit = {onSubmitHandler}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value = {school} onChange = {onChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree or Certificate\"\r\n            name=\"degree\"\r\n            value = {degree} onChange = {onChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value = {fieldofstudy}\r\n           onChange = {onChangeHandler} required/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value = {from} onChange = {onChangeHandler} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input type=\"checkbox\" name=\"current\" value = {current}\r\n             onChange = {(eve)=> {\r\n                 setFormData({...formData, current: !current})\r\n                 toggleDisableToDate(!disableToDate)\r\n                 }} />\r\n             Current School or Bootcamp\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value = {to} onChange = {onChangeHandler}\r\n          disabled = {disableToDate ? 'disable': ''}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value = {description} onChange = {onChangeHandler}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>  \r\n        </>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {addEducation})(withRouter(AddEducation))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ProfilesItems = ({profile:{\r\n    user:{name, avatar, _id},\r\n    skill,\r\n    company,\r\n    location,\r\n    status\r\n}}) => {\r\n    return (\r\n        <div className = 'profile bg-light'>\r\n          <img src = {avatar} alt = '' className= 'round-img' />\r\n          <div>\r\n              <h2>{name}</h2>\r\n              <p>{status} at {company && <span> {company}</span> } </p>\r\n              <p className = 'my-1'> {location && <span> {location}</span> } </p>\r\n              <Link to = {`/profile/${_id}`} className = 'btn btn-primary'>\r\n                  View Profile\r\n              </Link>\r\n         </div>\r\n              <ul>\r\n                  {skill.slice(0,4).map((skl, index)=>(\r\n                      <li key = {index} className = 'text-primary'>\r\n                          <i className = 'fas fa-check'>{' '}{skl}</i>\r\n                      </li>\r\n                  ))}\r\n              </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfilesItems.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfilesItems\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getAllProfiles } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfilesItems from './ProfilesItems'\r\n\r\nconst Profiles = ({getAllProfiles, profile: {profiles, isLoading}}) => {\r\n    useEffect(()=> getAllProfiles(),[isLoading, getAllProfiles])\r\n    return (\r\n        <>\r\n        {isLoading ? <Spinner/> :(\r\n        <>\r\n          <h1 className = 'large text-primary'>Developers </h1>\r\n          <p className = 'lead'>\r\n              <i className = 'fab connectdevelop'></i> {' '} Browse and connect with Developers..\r\n          </p>\r\n          <div className = 'profiles'>\r\n          {isLoading ? <Spinner/> : profiles.length > 0 ? (\r\n              profiles.map((profile)=>\r\n                  <ProfilesItems key= {profile._id} profile= {profile}/>\r\n              )\r\n        ): \r\n          <h4> No Profile Found </h4> }\r\n          </div>\r\n        </>\r\n        )\r\n         }\r\n        </>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getAllProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\nconst mapStateToprops = (state)=>({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToprops,{ getAllProfiles })(Profiles)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({profile:{\r\n    status,\r\n    company,\r\n    website,\r\n    location,\r\n    social,\r\n    user: {name, avatar}\r\n}}) => {\r\n    return (\r\n        <>\r\n        <div className=\"profile-top bg-primary p-2\">\r\n          <img\r\n            className=\"round-img my-1\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h1 className=\"large\">{name}</h1>\r\n          <p className=\"lead\">{status} {company && <span>at {' '}{company}</span>}</p>\r\n          <p>{location && <span>at {' '}{location}</span>}</p>\r\n          <div className=\"icons my-1\">\r\n              {website &&\r\n                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className=\"fas fa-globe fa-2x\"></i>\r\n                </a> \r\n              }\r\n              {social && social.twitter &&\r\n                 <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                 <i className=\"fab fa-twitter fa-2x\"></i>\r\n                 </a>\r\n              }\r\n              {social && social.facebook && \r\n                 <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                 <i className=\"fab fa-facebook fa-2x\"></i>\r\n                 </a>\r\n              }\r\n              {social && social.linkedin &&\r\n                <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                </a>\r\n              }\r\n              {social && social.youtube &&\r\n                <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                </a>\r\n              }\r\n              {social && social.instagram &&\r\n                <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                </a>\r\n              }\r\n          </div>\r\n        </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileTop\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({profile:{\r\n    skill,\r\n    bio,\r\n    user: {name}\r\n    }}) => {\r\n        return (\r\n        <div className=\"profile-about bg-light p-2\">\r\n            {bio &&<> \r\n              <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s bio</h2>\r\n              <p>\r\n               {bio}\r\n              </p>\r\n              <div className=\"line\"></div>\r\n              </>\r\n            }\r\n            <h2 className=\"text-primary\">Skill Set</h2>\r\n            <div className=\"skills\">\r\n              {skill.map((skl, index)=>\r\n                 <div key= {index} className=\"p-1\">\r\n                     <i className=\"fa fa-check\"></i> {skl}\r\n                 </div> \r\n              )}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n  profile:PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileExperience = ({experience:{\r\n    company,\r\n    from,\r\n    to,\r\n    description\r\n}, status}) => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-dark\">{company && <span>{company}</span>}</h3>\r\n            <p><Moment format= 'YYYY/MM/DD'>{from}</Moment> -\r\n             {to ? <Moment format= 'YYYY/MM/DD'>{to}</Moment>: 'Now' }\r\n             </p>\r\n            <p><strong>Position: </strong>{status}</p>\r\n            <p>\r\n              <strong>Description: </strong>{description}\r\n            </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n   experience: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileEducation = ({\r\n   education:{\r\n       school,\r\n       from,\r\n       to,\r\n       degree,\r\n       fieldofstudy,\r\n       description\r\n   } \r\n}) => {\r\n    return (\r\n        <div>\r\n            <h3>{school}</h3>\r\n            <p><Moment format= 'YYYY/MM/DD'>{from}</Moment> -\r\n             {to ? <Moment format= 'YYYY/MM/DD'>{to}</Moment>: 'Now' }\r\n             </p>\r\n            <p><strong>Degree: </strong>{degree}</p>\r\n            <p><strong>Field Of Study: </strong>{fieldofstudy}</p>\r\n            <p>\r\n              <strong>Description: </strong>{description}\r\n            </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileEducation\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getProfilesByUserId } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = ({match, profile:{ profile,isLoading}, auth, getProfilesByUserId}) => {\r\n    \r\n    useEffect(()=> getProfilesByUserId(match.params.user_id),[getProfilesByUserId, match.params.user_id])\r\n    return (<>\r\n     {\r\n       profile === null || isLoading ? <Spinner/> : <>\r\n       <Link to = '/profiles'> Back To Profile </Link>\r\n       { auth.isAuthenticated && auth.isLoading && auth.user._id === profile.user._id &&\r\n        <Link to ='edit-profile' className = 'btn btn-dark'> Edit Profile</Link> \r\n       }\r\n       <div class=\"profile-grid my-1\">\r\n            <ProfileTop profile = {profile}/>\r\n            <ProfileAbout profile = {profile}/>\r\n            <div class=\"profile-exp bg-white p-2\">\r\n               <h2 class=\"text-primary\">Experience</h2>\r\n                { \r\n                    profile.experience.length > 0 ?\r\n                    profile.experience.map((exp)=>(\r\n                        <ProfileExperience key= {exp._id} experience = {exp} status= {profile.status}/>\r\n                    )) : \r\n                    <h4>No Experience Credentials</h4>\r\n                }\r\n            </div>\r\n            <div class=\"profile-edu bg-white p-2\">\r\n               <h2 class=\"text-primary\">Education</h2>\r\n                {\r\n                    profile.education.length > 0 ?\r\n                    profile.education.map((edu)=>(\r\n                        <ProfileEducation key= {edu._id} education = {edu}/>\r\n                    )) : \r\n                    <h4>No Education Credentials</h4>\r\n                }\r\n            </div>\r\n        </div>\r\n       </>\r\n    } \r\n    </>)\r\n}\r\n\r\nProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    getProfilesByUserId: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops, {getProfilesByUserId})(Profile)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { addLike, addUnlike, deletePost } from '../../actions/post'\r\n\r\nconst PostItem = ({auth, displaySection = true, post: {_id, name, avatar, text, user, like, comment, date}, \r\n    addLike, addUnlike, deletePost}) => {\r\n    return (\r\n        <div className = 'posts'>\r\n            <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to = {`/profile/${user}`}>\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n               Posted On <Moment format = 'YYYY/MM/DD'>{date}</Moment>\r\n            </p>\r\n            {displaySection && <>\r\n                <button type=\"button\" className=\"btn btn-light\" onClick = {(eve)=> addLike(_id)}>\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n              {like.length ?  <span className='like-count'>{' '}{like.length} </span> : ' '}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\" onClick = {(eve)=> addUnlike(_id)}>\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to = {`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion {comment.length ?  <span className='comment-count'>{comment.length} </span> : ' '}\r\n            </Link>\r\n            { !auth.isLoading && auth.user._id === user && <button      \r\n            type=\"button\"\r\n            className=\"btn btn-danger\" onClick = {(eve)=> deletePost(_id)}>\r\n            <i className=\"fas fa-times\"></i>\r\n            </button> }\r\n            </>}\r\n        \r\n          </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.defaultProps = {\r\n    displaySection: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    post:PropTypes.object.isRequired,\r\n    addUnlike: PropTypes.func.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops, {addLike, addUnlike, deletePost})(PostItem)\r\n\r\n","import axios from 'axios'\r\nimport { GET_POSTS, GET_POST, POSTS_ERROR, UPDATE_LIKE, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'\r\nimport {setAlert} from '../actions/alert'\r\n\r\n//Get All Posts\r\nexport const getAllPosts = ()=> async (dispatch)=>{\r\n    try{\r\n        const res = await axios.get('/api/posts')\r\n        //console.log('getallpost res is', res.data)\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        //console.log('err is',err.response)\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//Get  Post BY POST ID\r\nexport const getPostByPostId = (post_id)=> async (dispatch)=>{\r\n    \r\n    try{\r\n        const res = await axios.get(`/api/posts/${post_id}`)\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        const errs = err.response.data.errors\r\n        errs.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n        //console.log('err is',err.response)\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// add Like\r\nexport const addLike = (post_id)=> async (dispatch)=>{\r\n    //console.log('add like is running  ')\r\n    try{\r\n        const res = await axios.put(`/api/posts/like/${post_id}`)\r\n        const data = res.data\r\n        //console.log('addlike response is', res.data)\r\n        dispatch({\r\n            type: UPDATE_LIKE,\r\n            payload: {post_id , like: data}\r\n        })\r\n    }\r\n    catch(err){\r\n        //console.log('err is',err.response)\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// add unLike\r\nexport const addUnlike = (post_id)=> async (dispatch)=>{\r\n    try{\r\n        const res = await axios.put(`/api/posts/unlike/${post_id}`)\r\n        const data = res.data\r\n        //console.log('getallpost res is', res.data)\r\n        dispatch({\r\n            type: UPDATE_LIKE,\r\n            payload: {post_id , like: data}\r\n        })\r\n    }\r\n    catch(err){\r\n        //console.log('err is',err.response)\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//delete the post\r\nexport const deletePost = (post_id)=> async (dispatch)=>{\r\n    try{\r\n        await axios.delete(`/api/posts/${post_id}`)\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: post_id \r\n        })\r\n        dispatch(setAlert('Post Deleted', 'success'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//ADD A POST\r\nexport const addPost = (text)=> async (dispatch)=>{\r\n\r\n    const config = {headers:{\r\n        'Content-Type' : 'application/json'\r\n    }}\r\n    try{\r\n        const res = await axios.post(`/api/posts/`, text , config)\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data  \r\n        })\r\n        dispatch(setAlert('Post Added', 'success'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// ADD COMMENT ON POST\r\nexport const addComment = (post_id, text)=> async dispatch=>{\r\n    const config = {headers:{\r\n        'Content-Type' : 'application/json'\r\n    }}\r\n    try{\r\n        const res = await axios.post(`/api/posts/comment/${post_id}`, text , config)\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data  \r\n        })\r\n        dispatch(setAlert('Comment Added', 'success'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n} \r\n\r\n// REMOVE COMMENT ON POST\r\nexport const removeComment = (post_id, comment_id)=> async dispatch=>{\r\n    \r\n    try{\r\n        await axios.delete(`/api/posts/comment/${post_id}/${comment_id}`)\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: {comment_id}  \r\n        })\r\n        dispatch(setAlert('Comment Added', 'success'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n} ","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../actions/post'\r\n\r\nconst PostForm = ({addPost}) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const onChangeHandler = (eve)=> setText(eve.target.value)\r\n    const onSubmitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        addPost({text})\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-form\">\r\n        <div className=\"bg-primary p\">\r\n          <h3>Say Something...</h3>\r\n        </div>\r\n        <form className=\"form my-1\" onSubmit = {(eve)=> onSubmitHandler(eve)}>\r\n          <textarea\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            value = {text}\r\n            onChange = {(eve)=> onChangeHandler(eve)}\r\n            required\r\n          ></textarea>\r\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {addPost})(PostForm)\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from './PostItem'\r\nimport PostForm from './PostForm'\r\nimport { getAllPosts } from '../../actions/post'\r\n\r\nconst Posts = ({post: {posts, isLoading}, getAllPosts}) => {\r\n    useEffect(()=>{\r\n        //console.log('useeffect is running')\r\n         getAllPosts()},[getAllPosts])\r\n    return ( isLoading ? <Spinner/> :\r\n        <>\r\n        <h1 className=\"large text-primary\">\r\n          Posts\r\n        </h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome to the community!</p>\r\n        {<PostForm/>}\r\n        <div className = 'posts'>\r\n            { posts.map((post)=>\r\n            <PostItem key = {post._id} post = {post}/>\r\n            )}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n   post: PropTypes.object.isRequired,\r\n   getAllPosts: PropTypes.func.isRequired, \r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToprops, {getAllPosts})(Posts)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { removeComment } from '../../actions/post'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CommentItem = ({auth, comment: {_id, text, name, avatar, user, date}, post_id, removeComment }) => {\r\n\r\n     return( <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to = {`/profile/${user}`}>\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on {<Moment format = 'YYYY/MM/DD'>{date}</Moment>}\r\n            </p>\r\n            {!auth.isLoading && auth.user._id === user && (\r\n                <button className = 'btn btn-danger' type = 'button'\r\n                 onClick = {(eve)=> removeComment(post_id, _id)}>\r\n                  <i className = 'fas fa-times'/>\r\n                </button>\r\n            )  }\r\n          </div>\r\n        </div>\r\n     )  \r\n}\r\n\r\nCommentItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    removeComment: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops, {removeComment})(CommentItem)\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addComment } from '../../actions/post'\r\n\r\nconst CommentForm = ({addComment, post_id}) => {\r\n    \r\n    const [text, setText] = useState('')\r\n\r\n    const onChangeHandler = (eve)=> setText(eve.target.value)\r\n    const onSubmitHandler = (eve)=>{\r\n        eve.preventDefault()\r\n        addComment(post_id, {text})\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-form\">\r\n        <div className=\"bg-primary p\">\r\n          <h3>Leave a Comment...</h3>\r\n        </div>\r\n        <form className=\"form my-1\" onSubmit = {(eve)=> onSubmitHandler(eve)}>\r\n          <textarea\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Leave a comment\"\r\n            value = {text}\r\n            onChange = {(eve)=> onChangeHandler(eve)}\r\n            required\r\n          ></textarea>\r\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {addComment})(CommentForm)\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getPostByPostId } from '../../actions/post'\r\nimport PostItem from '../posts/PostItem'\r\nimport CommentItem from './CommentItem'\r\nimport CommentForm from './CommentForm'\r\nimport Spinner from '../layout/Spinner'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Post = ({post:{post, isLoading}, getPostByPostId, match}) => {\r\n    useEffect(()=> getPostByPostId(match.params.post_id),[getPostByPostId, match.params.post_id])\r\n    \r\n    return ( post === null || isLoading  ? <Spinner /> :<>\r\n        <Link to = '/posts' className = 'btn'> Back To Post </Link>\r\n        <PostItem displaySection = {false} post = {post} />\r\n        {console.log('post before comment form is ', post)}\r\n        <CommentForm post_id = {post._id}/>\r\n        {post.comment.map((comm)=> \r\n        <CommentItem key = {comm._id} post_id= {post._id} comment = {comm}/> )}\r\n        </>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    getPostByPostId: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToprops, {getPostByPostId})(Post)\r\n","import { SET_ALERT,REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = []\r\n\r\nconst alert = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case SET_ALERT:\r\n            return [...state, action.payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter((eachAlert)=> eachAlert.id !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default alert","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: true,\r\n    user: null\r\n}\r\n\r\nconst auth = (state = initialState, action)=>{\r\n    const {type, payload} = action\r\n\r\n    switch(type){\r\n        case USER_LOADED:\r\n            return({\r\n                ...state,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n                user:payload\r\n            })\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return({\r\n                ...state,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n                ...payload\r\n            })\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token')\r\n            return({\r\n                ...state,\r\n                isLoading:false,\r\n                isAuthenticated:false,\r\n                token:null\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth","import { ADD_EDUCATION, ADD_EXPERIENCE, CLEAR_PROFILE, GET_GITHUB_REPOS, GET_PROFILE,\r\n     GET_PROFILES,\r\n     PROFILE_ERROR, UPDATE_PROFILE } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    error: {},\r\n    isLoading: true\r\n}\r\n\r\nconst profile = (state = initialState, action)=>{\r\n    const {type, payload} = action\r\n    //console.log(`before state updated and reducer is running action type is ${type} payload is  `,payload)\r\n    switch(type){\r\n        case GET_PROFILE:\r\n        case ADD_EDUCATION:\r\n        case ADD_EXPERIENCE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                isLoading:false\r\n            }\r\n        case GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profiles: payload,\r\n                isLoading:false\r\n            }\r\n        case GET_GITHUB_REPOS:\r\n            return{\r\n                    ...state,\r\n                    repos : payload,\r\n                    isLoading:false\r\n                }\r\n        case PROFILE_ERROR:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: payload,\r\n                profile: null\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                profile:null,\r\n                repos:[]\r\n            }\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default profile","import { ADD_POST, DELETE_POST, GET_POSTS, GET_POST, POSTS_ERROR ,UPDATE_LIKE, ADD_COMMENT, REMOVE_COMMENT, CLEAR_POST} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    posts : [],\r\n    isLoading: true,\r\n    error:{},\r\n    post:null\r\n}\r\n\r\nconst post = (state = initialState, action)=>{\r\n    const {type, payload}= action\r\n    switch(type){\r\n        case GET_POSTS:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                posts:payload\r\n            }\r\n        case GET_POST:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                post:payload\r\n            }\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                posts: [ payload, ...state.posts]\r\n            }\r\n        case DELETE_POST:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                posts: state.posts.filter((post)=> post._id !== payload)\r\n            }\r\n        case POSTS_ERROR:\r\n            return{\r\n                ...state,\r\n                error: payload,\r\n                isLoading:false,\r\n                post: null\r\n            }\r\n        case CLEAR_POST:\r\n            return{\r\n                ...state,\r\n                posts: [],\r\n                post:null,\r\n                isLoading:false\r\n            }\r\n        case UPDATE_LIKE:\r\n            return{\r\n                ...state,\r\n                posts: state.posts.map((post)=> post._id === payload.post_id ? \r\n                {...post, like: payload.like} : post ),\r\n                isLoading: false\r\n            }\r\n        case ADD_COMMENT:\r\n            return{\r\n                ...state,\r\n                post: {...state.post, comment: payload},\r\n                isLoading: false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return{\r\n                ...state,\r\n                post: {...state.post, comment: state.post.comment.filter((comm)=> comm._id !== payload.comment_id)},\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default post","import { combineReducers } from \"redux\";\r\nimport alert from './alert'\r\nimport auth from \"./auth\";\r\nimport profile from './profile'\r\nimport post from \"./post\";\r\n\r\nconst rootReducer =  combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers/index';\r\n\r\nconst middleware = [thunk]\r\nconst initialState = {}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({component: Component, auth: {isAuthenticated, isLoading}, ...rest}) =>(\r\n    <Route {...rest} render = {\r\n        props => !isAuthenticated && !isLoading ? (\r\n            <Redirect to = 'login'/>) : (<Component {...props}/>) \r\n    } />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops)(PrivateRoute)\r\n","import { useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login  from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile  from './components/profile-form/CreateProfile';\nimport EditProfile from './components/profile-form/EditProfile';\nimport AddExperience from './components/profile-form/AddExperience';\nimport AddEducation from './components/profile-form/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n\n\nif(localStorage.token){\n  setAuthToken(localStorage.token)\n}\n\nfunction App() {\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <Provider store = {store}>\n    <BrowserRouter>\n    <>\n      <Navbar/>\n      <Route exact path = '/' component = {Landing}/>\n      <section className = 'container'>\n        <Alert/>\n        <Switch>\n          <Route exact path = '/login' component = {Login} />\n          <Route exact path = '/register' component = {Register} />\n          <Route exact path = '/profiles' component = {Profiles} />\n          <Route exact path = '/profile/:user_id' component = {Profile} />\n          <PrivateRoute exact path = '/dashboard' component = {Dashboard} />\n          <PrivateRoute exact path = '/create-profile' component = {CreateProfile} />\n          <PrivateRoute exact path = '/edit-profile' component = {EditProfile} />\n          <PrivateRoute exact path = '/add-experience' component = {AddExperience} />\n          <PrivateRoute exact path = '/add-education' component = {AddEducation} />\n          <PrivateRoute exact path = '/posts' component = {Posts} />\n          <PrivateRoute exact path = '/posts/:post_id' component = {Post} />\n        </Switch>\n      </section>\n    </>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}